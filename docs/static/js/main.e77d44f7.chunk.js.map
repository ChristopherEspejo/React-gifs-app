{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAEI,sBAAMC,SAXW,SAACC,GACnBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAO,IAC1BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACrCN,EAAc,MAKf,SACE,uBACCO,YAAa,aACZC,KAAK,OACLC,MAAOV,EACPW,SApBgB,SAACR,GAErBF,EAAcE,EAAES,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAG0BC,UAAYH,GAHtC,8DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Ca,QAAQC,IAAIR,GAfO,kBAiBZA,GAjBY,4CAAH,sDCEPS,EAAc,SAAC,GAAmB,EAAlBN,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKgB,UAAU,wCAAf,UACI,qBAAMC,IAAKjB,EAAKkB,IAAOR,IACvB,4BAAIA,QCFHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAGxB,ECLwB,SAACA,GACvB,MAA0Bf,mBAAS,CAC/BsB,KAAK,GACLe,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAZAC,qBAAU,WACN1B,EAAQC,GACP0B,MAAM,SAAAC,GACHC,YAAW,WAEPJ,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,MAEd,WAER,CAACtB,IACIuB,EDZeM,CAAa7B,GAA9BO,EAAP,EAAOA,KAAMe,EAAb,EAAaA,QAEb,OACE,qCAEI,oBAAIJ,UAAU,qCAAd,SAAoDlB,IACnDsB,GAAS,mBAAGJ,UAAU,qCAAb,qBACT,qBAAKA,UAAU,YAAf,SAEOX,EAAKE,KAAI,SAAAC,GACT,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEbhCmB,EAAe,WAExB,MAAkC7C,mBAAS,IAA3C,mBAAM8C,EAAN,KAAiB/C,EAAjB,KAIA,OACI,qCAEI,sBAAKkC,UAAU,SAAf,UACI,8CACA,cAAC,EAAD,CAAalC,cAAeA,OAEhC,uBACA,6BAEQ+C,EAAWtB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YChBvBgC,G,MAAUC,SAASC,cAAc,UACvCC,IAASC,OAAO,cAAC,EAAD,IAAgBJ,K","file":"static/js/main.e77d44f7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange=(e)=>{\r\n      \r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e)=>{\r\n       e.preventDefault();\r\n       /* console.log(\"enviado!!!\") */\r\n    \r\n       if(inputValue.trim().length>1){\r\n         setCategories(cats=>[ inputValue ,...cats,]);\r\n         setInputValue('');\r\n       }\r\n    }\r\n    return (\r\n       \r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n           placeholder= \"nombre gif\"\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          /> \r\n        </form>\r\n       \r\n    )\r\n}\r\nAddCategory.propTypes={\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n   \r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${ encodeURI ( category )}&limit=5&api_key=5AdvgQGefQxfVUxsErHy1jZ52qlhvyfX`;\r\n    const resp = await fetch( url );\r\n    \r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    console.log(gifs);\r\n    \r\n    return gifs;\r\n  };","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n   \r\n    return (\r\n        <div className=\"card animate__animated animate__swing\">\r\n            <img  src={url} alt = {title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  /*     5AdvgQGefQxfVUxsErHy1jZ52qlhvyfX */\r\n  \r\n  const {data, loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      \r\n        <h3 className=\" animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading&&<p className=\" animate__animated animate__fadeIn\">Loading</p> }\r\n        {<div className=\"card-grid\">\r\n            {\r\n                data.map(img=>{\r\n                return <GifGridItem key={img.id} {...img} />\r\n                })\r\n            }\r\n        \r\n        \r\n        </div>}\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs=(category)=>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then( imgs=>{\r\n            setTimeout(()=>{\r\n                \r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            },1500);\r\n        });\r\n    },[category] ) \r\n    return state; //{data:[],loading:true}\r\n}","import React, {  useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const[categories,setCategories] = useState([]);\r\n    /* const handleAdd=()=>{\r\n        setCategories(cats=>[...cats,'Mafalda']);\r\n    } */\r\n    return (\r\n        <>\r\n            \r\n            <div className=\"header\">\r\n                <h2>GifExpertApp</h2>\r\n                <AddCategory setCategories={setCategories} />\r\n            </div>\r\n            <hr/>\r\n            <ol>\r\n                { \r\n                    categories.map(category=>\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category}/>\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nconst divRoot = document.querySelector('#root');\nReactDOM.render(<GifExpertApp/>,divRoot);\n\n\n\n"],"sourceRoot":""}